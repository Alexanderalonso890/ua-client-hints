<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc tocdepth="2"?>

<rfc ipr="trust200902" docName="draft-west-ua-client-hints" category="std">

  <front>
    <title>User Agent Client Hints</title>

    <author initials="M." surname="West" fullname="Mike West">
      <organization>Google</organization>
      <address>
        <email>mkwst@google.com</email>
      </address>
    </author>

    <date />

    <area>Applications and Real-Time</area>
    <workgroup>HTTP</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a set of Client Hints that aim to provide developers with the ability to
perform agent-based content negotiation when necessary, while avoiding the historical baggage and
passive fingerprinting surface exposed by the venerable <spanx style="verb">User-Agent</spanx> header.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Today, user agents generally identify themselves to servers by sending a <spanx style="verb">User-Agent</spanx> HTTP request
header field along with each request (defined in Section 5.5.3 of <xref target="RFC7231"/>). Ideally, this header
would give servers the ability to perform content negotiation, sending down exactly those bits that
best represent the requested resource in a given user agent, optimizing both bandwidth and user
experience. In practice, however, this header’s value exposes far more information about the user’s
device than seems appropriate as a default, on the one hand, and intentionally obscures the true
user agent in order to bypass misguided server-side heuristics, on the other.</t>

<t>For example, a recent version of Chrome on iOS identifies itself as:</t>

<figure><artwork type="example"><![CDATA[
  User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 12_0 like Mac OS X)
              AppleWebKit/605.1.15 (KHTML, like Gecko)
              CriOS/69.0.3497.105 Mobile/15E148 Safari/605.1
]]></artwork></figure>

<t>While a recent version of Edge identifies itself as:</t>

<figure><artwork type="example"><![CDATA[
  User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)
              AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.2704.79
              Safari/537.36 Edge/18.014
]]></artwork></figure>

<t>There’s quite a bit of information packed into those strings (along with a fair number of lies).
Version numbers, platform details, model information, etc. are all broadcast along with every
request, and form the basis for fingerprinting schemes of all sorts. Individual vendors have taken
stabs at altering their user agent strings, and have run into a few categories of feedback from
developers that have stymied historical approaches:</t>

<t><list style="numbers">
  <t>Brand and version information (e.g. “Chrome 69”) allows websites to work around known bugs in
specific releases that aren’t otherwise detectable. For example, implementations of Content
Security Policy have varied wildly between vendors, and it’s difficult to know what policy to
send in an HTTP response without knowing what browser is responsible for its parsing and
execution.</t>
  <t>Developers will often negotiate what content to send based on the user agent and platform. Some
application frameworks, for instance, will style an application on iOS differently from the same
application on Android in order to match each platform’s aesthetic and design patterns.</t>
  <t>Similarly to #1, OS revisions and architecture can be responsible for specific bugs which can
be worked around in website’s code, and narrowly useful for things like selecting appropriate
executables for download (32 vs 64 bit, ARM vs Intel, etc).</t>
  <t>Sophisticated developers use model/make to tailor their sites to the capabilities of the
device (e.g. <xref target="FacebookYearClass"/>) and to pinpoint performance bugs and regressions which
sometimes are specific to model/make.</t>
</list></t>

<t>This document proposes a mechanism which might allow user agents to be a bit more aggressive about
removing entropy from the <spanx style="verb">User-Agent</spanx> string generally by giving servers that really need some
specific details about the client the ability to opt-into receiving them. It introduces four new
Client Hints (<xref target="I-D.ietf-httpbis-client-hints"/>) that can provide the client’s branding and version
information, the underlying operating system’s branding and major version, as well as details about
the underlying device. Rather than broadcasting this data to everyone, all the time, user agents can
make reasonable decisions about how to respond to given sites’ requests for more granular data,
reducing the passive fingerprinting surface area exposed to the network.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="user-agent-hints" title="User Agent Hints">

<t>The following sections define a number of HTTP request header fields that expose detail about a
given user agent, which servers can opt-into receiving via the Client Hints infrastructure defined
in <xref target="I-D.ietf-httpbis-client-hints"/>. The definitions below assume that each user agent has defined
a number of properties for itself (all of which are strings):</t>

<t><list style="symbols">
  <t><spanx style="verb">brand</spanx> (for example: “cURL”, “Edge”, “The World’s Best Web Browser”)</t>
  <t><spanx style="verb">major version</spanx> (for example: “72”, “3”, or “28”)</t>
  <t><spanx style="verb">full version</spanx> (for example: “72.0.3245.12”, “3.14159”, or “297.70E04154A”)</t>
  <t><spanx style="verb">platform brand</spanx> (for example: “Windows NT”, “iOS”, or “AmazingOS”)</t>
  <t><spanx style="verb">platform version</spanx> (for example: “10”, “12”, or “17G”)</t>
  <t><spanx style="verb">platform architecture</spanx> (for example: “ARM64”, or “ia32”)</t>
  <t><spanx style="verb">model</spanx> (for example: “”, or “Pixel 2 XL”)</t>
</list></t>

<t>User agents SHOULD keep these strings short and to the point, but servers MUST accept arbitrary
values for each, as they are all values constructed at the user agent’s whim.</t>

<section anchor="sec-ch-arch" title="The ‘Sec-CH-Arch’ Header Field">

<t>The <spanx style="verb">Sec-CH-Platform</spanx> request header field gives a server information about the architecture of the
platform on which a given user agent is executing. It is a Structured Header
(<xref target="I-D.ietf-httpbis-header-structure"/>) whose value MUST be a string
(<xref target="I-D.ietf-httpbis-header-structure"/>, Section 3.7).</t>

<t>The header’s ABNF is:</t>

<figure><artwork type="abnf7230"><![CDATA[
  Sec-CH-Arch = sh-string
]]></artwork></figure>

<t>To generate a <spanx style="verb">Sec-CH-Arch</spanx> header value for a given request, user agents MUST:</t>

<t><list style="numbers">
  <t>If the request’s client-hints set includes <spanx style="verb">Arch</spanx>, then:  <list style="numbers">
      <t>Let <spanx style="verb">value</spanx> be a Structured Header whose value is the user agent’s <spanx style="verb">platform architecture</spanx>.</t>
      <t>Set a header in request’s header list whose name is <spanx style="verb">Sec-CH-Arch</spanx>, and whose value is
<spanx style="verb">value</spanx>.</t>
    </list></t>
</list></t>

</section>
<section anchor="sec-ch-model" title="The ‘Sec-CH-Model’ Header Field">

<t>The <spanx style="verb">Sec-CH-Model</spanx> request header field gives a server information about the device on which a given
user agent is executing. It is a Structured Header (<xref target="I-D.ietf-httpbis-header-structure"/>) whose
value MUST be a string (<xref target="I-D.ietf-httpbis-header-structure"/>, Section 3.7).</t>

<t>The header’s ABNF is:</t>

<figure><artwork type="abnf7230"><![CDATA[
  Sec-CH-Model = sh-string
]]></artwork></figure>

<t>To generate a <spanx style="verb">Sec-CH-Model</spanx> header value for a given request, user agents MUST:</t>

<t><list style="numbers">
  <t>If the request’s client-hints set includes <spanx style="verb">Model</spanx>, then:  <list style="numbers">
      <t>Let <spanx style="verb">value</spanx> be a Structured Header whose value is the user agent’s <spanx style="verb">model</spanx>.</t>
      <t>Set a header in request’s header list whose name is <spanx style="verb">Sec-CH-Model</spanx>, and whose value is
<spanx style="verb">value</spanx>.</t>
    </list></t>
</list></t>

</section>
<section anchor="sec-ch-platform" title="The ‘Sec-CH-Platform’ Header Field">

<t>The <spanx style="verb">Sec-CH-Platform</spanx> request header field gives a server information about the platform on which a
given user agent is executing. It is a Structured Header (<xref target="I-D.ietf-httpbis-header-structure"/>)
whose value MUST be a string (<xref target="I-D.ietf-httpbis-header-structure"/>, Section 3.7).</t>

<t>The header’s ABNF is:</t>

<figure><artwork type="abnf7230"><![CDATA[
  Sec-CH-Platform = sh-string
]]></artwork></figure>

<t>To generate a <spanx style="verb">Sec-CH-Platform</spanx> header value for a given request, user agents MUST:</t>

<t><list style="numbers">
  <t>If the request’s client-hints set includes <spanx style="verb">Platform</spanx>, then:  <list style="numbers">
      <t>Let <spanx style="verb">value</spanx> be a Structured Header whose value is the concatenation of the user agent’s
<spanx style="verb">platform brand</spanx>, a U+0020 SPACE character, and the user agent’s <spanx style="verb">platform version</spanx>.</t>
      <t>Set a header in request’s header list whose name is <spanx style="verb">Sec-CH-Platform</spanx>, and whose value is
<spanx style="verb">value</spanx>.</t>
    </list></t>
</list></t>

</section>
<section anchor="sec-ch-ua" title="The ‘Sec-CH-UA’ Header Field">

<t>The <spanx style="verb">Sec-CH-UA</spanx> request header field gives a server information about a user agent’s branding and
version. It is a Structured Header (<xref target="I-D.ietf-httpbis-header-structure"/>) whose value MUST be a
list (<xref target="I-D.ietf-httpbis-header-structure"/>, Section 3.2). Each item in the list MUST be a string
(<xref target="I-D.ietf-httpbis-header-structure"/>, Section 3.7).</t>

<t>The header’s ABNF is:</t>

<figure><artwork type="abnf7230"><![CDATA[
  Sec-CH-UA = sh-list
]]></artwork></figure>

<t>Unlike most Client Hints, the <spanx style="verb">Sec-CH-UA</spanx> header will be sent with all requests, whether or not the
server opted-into receiving the header via an <spanx style="verb">Accept-CH</spanx> header. Prior to an opt-in, however, it
will include only the user agent’s branding information, and the major version number (both of which
are fairly clearly sniffable by “examining the structure of other headers and by testing for the
availability and semantics of the features introduced or modified between releases of a particular
browser” <xref target="Janc2014"/>).</t>

<t>To generate a <spanx style="verb">Sec-CH-UA</spanx> header value for a given request, user agents MUST:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">value</spanx> be a Structured Header whose value is a list
(<xref target="I-D.ietf-httpbis-header-structure"/>).</t>
  <t>If the request’s client-hints set includes <spanx style="verb">UA</spanx>, then add an item to <spanx style="verb">value</spanx> whose value is
the concatenation of the user agent’s <spanx style="verb">brand</spanx>, a U+0020 SPACE character, and the user agent’s
<spanx style="verb">full version</spanx>.  <vspace blankLines='1'/>
Otherwise, add an item to <spanx style="verb">value</spanx> whose value is the concatenation of the user agent’s
<spanx style="verb">brand</spanx>, a U+0020 SPACE character, and the user agent’s <spanx style="verb">major version</spanx>.</t>
  <t>The user agent MAY execute the following steps:  <list style="numbers">
      <t>Append additional items to <spanx style="verb">value</spanx> containing arbitrary brand and version combinations.</t>
      <t>Randomize the order of the items in <spanx style="verb">value</spanx>.</t>
    </list>
Note: See <xref target="grease"/> for more details on why these steps might be appropriate.</t>
  <t>Set a header in request’s header list whose name is <spanx style="verb">Sec-CH-UA</spanx>, and whose value is <spanx style="verb">value</spanx>.</t>
</list></t>

</section>
<section anchor="integration-with-fetch" title="Integration with Fetch">

<t>The Fetch specification should call into the following algorithm in place of the current Step 5.11
in its HTTP-network-or-cache fetch algorithm.</t>

<t>To set the user agent metadata for a request (<spanx style="verb">r</spanx>), the user agent MUST execute the following
steps:</t>

<t><list style="numbers">
  <t>If request’s header list does not contain <spanx style="verb">User-Agent</spanx>, then the user agent should append
<spanx style="verb">User-Agent</spanx>/default <spanx style="verb">User-Agent</spanx> value to <spanx style="verb">request</spanx>’s header list.</t>
  <t>Set request’s <spanx style="verb">Sec-CH-Arch</spanx> header, as described in <xref target="sec-ch-arch"/>.</t>
  <t>Set request’s <spanx style="verb">Sec-CH-Model</spanx> header, as described in <xref target="sec-ch-model"/>.</t>
  <t>Set request’s <spanx style="verb">Sec-CH-Platform</spanx> header, as described in <xref target="sec-ch-platform"/>.</t>
  <t>Set request’s <spanx style="verb">Sec-CH-UA</spanx> header, as described in <xref target="sec-ch-ua"/>.</t>
</list></t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="secure-transport" title="Secure Transport">

<t>Client Hints will not be delivered to non-secure endpoints. This means that user agent information
will not be leaked over plaintext channels, reducing the opportunity for network attackers to build
a profile of a given agent’s behavior over time.</t>

</section>
<section anchor="delegation" title="Delegation">

<t>Client Hints will be delegated from top-level pages via Feature Policy (once a few patches against
Fetch and Client Hints and Feature Poilicy land. This reduces the likelyhood that user agent
information will be delivered along with subresource requests, which reduces the potential for
passive fingerprinting.</t>

<t><list style="symbols">
  <t>Fetch integration of Accept-CH opt-in: https://github.com/whatwg/fetch/issues/773</t>
  <t>HTML integration of Accept-CH-Lifetime and the ACHL cache: https://github.com/whatwg/html/issues/3774</t>
  <t>Adding new CH features to the CH list in Fetch: https://github.com/whatwg/fetch/issues/725</t>
  <t>Other PRs for adding the Feature Policy 3rd party opt-in: https://github.com/whatwg/fetch/issues/811 and https://github.com/wicg/feature-policy/issues/220</t>
</list></t>

</section>
</section>
<section anchor="implementation-considerations" title="Implementation Considerations">

<section anchor="user-agent" title="The ‘User-Agent’ Header">

<t>User agents SHOULD deprecate the <spanx style="verb">User-Agent</spanx> header in favor of the Client Hints model described in
this document. The header, however, is likely to be impossible to remove entirely in the near-term,
as existing sites’ content negotiation code will continue to require its presence (see
<xref target="Rossi2015"/> for a recent example of a new browser’s struggles in this area).</t>

<t>One approach which might be advisable could be for each user agent to lock the value of its
<spanx style="verb">User-Agent</spanx> header, ensuring backwards compatibility by maintaining the crufty declarations of
“like Gecko” and “AppleWebKit/537.36” on into eternity. This can ratchet over time, first freezing
the version number, then shifting platform and model information to something reasonably generic in
order to reduce the fingerprint the header provides.</t>

</section>
<section anchor="grease" title="GREASE-like UA Strings">

<t>History has shown us that there are real incentives for user agents to lie about their branding
in order to thread the needle of sites’ sniffing scripts. While I’m optimistic that we can reset
expectations around sniffing by freezing the thing that’s sniffed-upon today, and creating a sane 
set of options for developers, it’s likely that this is hopelessly naive. It’s reasonable to
ponder what we should do to encourage sniffing in the right way, if we believe it’s going to
happen one way or another.</t>

<t>User agents may choose to model <spanx style="verb">UA</spanx> as a set, rather than a single entry. This could encourage
standardized processing of the <spanx style="verb">UA</spanx> string by 
Randomly including additional, intentionally incorrect, comma-separated entries with arbitrary
ordering (similar conceptually to <xref target="I-D.ietf-tls-grease"/>) could encourage standardized processing
if the <spanx style="verb">UA</spanx> string by servers, and reduce the chance that we ossify on a few required strings.
For example, Chrome 73’s <spanx style="verb">Sec-CH-UA</spanx> header might be <spanx style="verb">"Chrome 73", "NotBrowser 12"</spanx>, or
<spanx style="verb">"BrowsingIsFun Version 12b", "Chrome 73"</spanx>, or something completely different.</t>

</section>
<section anchor="the-sec-ch-prefix" title="The ‘Sec-CH-‘ prefix">

<t>Based on some discussion in https://github.com/w3ctag/design-reviews/issues/320, it seems
reasonable to forbid access to these headers from JavaScript, and demarcate them as
browser-controlled client hints so they can be documented and included in requests without
triggering CORS preflights. A <spanx style="verb">Sec-CH-</spanx> prefix seems like a viable approach, but this bit might
shift as the broader Client Hints discussions above coalesce into something more solid that lands
in specs.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document intends to define the <spanx style="verb">Sec-CH-Arch</spanx>, <spanx style="verb">Sec-CH-Model</spanx>, <spanx style="verb">Sec-CH-Platform</spanx>, and
<spanx style="verb">Sec-CH-UA</spanx> HTTP request header fields, and register them in the permanent message header
field registry (<xref target="RFC3864"/>).</t>

<t>It also intends to deprecate the <spanx style="verb">User-Agent</spanx> header field.</t>

<section anchor="sec-ch-arch-header-field" title="‘Sec-CH-Arch’ Header Field">

<t><list style="hanging">
  <t hangText='Header field name:'>
  Sec-CH-Arch</t>
  <t hangText='Applicable protocol:'>
  http</t>
  <t hangText='Status:'>
  standard</t>
  <t hangText='Author/Change controller:'>
  IETF</t>
  <t hangText='Specification document:'>
  this specification (<xref target="sec-ch-arch"/>)</t>
</list></t>

</section>
<section anchor="sec-ch-model-header-field" title="‘Sec-CH-Model’ Header Field">

<t><list style="hanging">
  <t hangText='Header field name:'>
  Sec-CH-Model</t>
  <t hangText='Applicable protocol:'>
  http</t>
  <t hangText='Status:'>
  standard</t>
  <t hangText='Author/Change controller:'>
  IETF</t>
  <t hangText='Specification document:'>
  this specification (<xref target="sec-ch-ua"/>)</t>
</list></t>

</section>
<section anchor="sec-ch-platform-header-field" title="‘Sec-CH-Platform’ Header Field">

<t><list style="hanging">
  <t hangText='Header field name:'>
  Sec-CH-Platform</t>
  <t hangText='Applicable protocol:'>
  http</t>
  <t hangText='Status:'>
  standard</t>
  <t hangText='Author/Change controller:'>
  IETF</t>
  <t hangText='Specification document:'>
  this specification (<xref target="sec-ch-platform"/>)</t>
</list></t>

</section>
<section anchor="sec-ch-ua-header-field" title="‘Sec-CH-UA’ Header Field">

<t><list style="hanging">
  <t hangText='Header field name:'>
  Sec-CH-UA</t>
  <t hangText='Applicable protocol:'>
  http</t>
  <t hangText='Status:'>
  standard</t>
  <t hangText='Author/Change controller:'>
  IETF</t>
  <t hangText='Specification document:'>
  this specification (<xref target="sec-ch-ua"/>)</t>
</list></t>

</section>
<section anchor="user-agent-header-field" title="‘User-Agent’ Header Field">

<t><list style="hanging">
  <t hangText='Header field name:'>
  User-Agent</t>
  <t hangText='Applicable protocol:'>
  http</t>
  <t hangText='Status:'>
  standard</t>
  <t hangText='Author/Change controller:'>
  IETF</t>
  <t hangText='Specification document:'>
  this specification (<xref target="user-agent"/>), and Section 5.5.3 of <xref target="RFC7231"/></t>
</list></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference anchor="I-D.ietf-httpbis-client-hints">
<front>
<title>HTTP Client Hints</title>

<author initials='I' surname='Grigorik' fullname='Ilya Grigorik'>
    <organization />
</author>

<date month='July' day='16' year='2018' />

<abstract><t>An increasing diversity of Web-connected devices and software capabilities has created a need to deliver optimized content for each device.  This specification defines an extensible and configurable set of HTTP request header fields, colloquially known as Client Hints, to address this.  They are intended to be used as input to proactive content negotiation; just as the Accept header field allows user agents to indicate what formats they prefer, Client Hints allow user agents to indicate device and agent specific preferences.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-client-hints-06' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-client-hints-06.txt' />
</reference>



<reference anchor="I-D.ietf-httpbis-header-structure">
<front>
<title>Structured Headers for HTTP</title>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<author initials='P' surname='Kamp' fullname='Poul-Henning Kamp'>
    <organization />
</author>

<date month='October' day='23' year='2018' />

<abstract><t>This document describes a set of data types and algorithms associated with them that are intended to make it easier and safer to define and handle HTTP header fields.  It is intended for use by new specifications of HTTP header fields as well as revisions of existing header field specifications when doing so does not cause interoperability issues.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-header-structure-08' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-header-structure-08.txt' />
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-tls-grease">
<front>
<title>Applying GREASE to TLS Extensibility</title>

<author initials='D' surname='Benjamin' fullname='David Benjamin'>
    <organization />
</author>

<date month='June' day='6' year='2018' />

<abstract><t>This document describes GREASE (Generate Random Extensions And Sustain Extensibility), a mechanism to prevent extensibility failures in the TLS ecosystem.  It reserves a set of TLS protocol values that may be advertised to ensure peers correctly handle unknown values.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-tls-grease-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-tls-grease-01.txt' />
</reference>


<reference anchor="Janc2014" target="https://dev.chromium.org/Home/chromium-security/client-identification-mechanisms#TOC-Browser-level-fingerprints">
  <front>
    <title>Technical analysis of client identification mechanisms</title>
    <author initials="M." surname="Zalewski" fullname="Michal Zalweski">
      <organization>Google</organization>
    </author>
    <author initials="A." surname="Janc" fullname="Artur Janc">
      <organization>Google</organization>
    </author>
    <date year="2014" month="September" day="03"/>
  </front>
</reference>
<reference anchor="Rossi2015" target="https://channel9.msdn.com/Events/WebPlatformSummit/2015/The-Microsoft-Edge-Rendering-Engine-that-makes-the-Web-just-work#time=9m45s">
  <front>
    <title>The Microsoft Edge Rendering Engine that makes the Web just work</title>
    <author initials="J." surname="Rossi" fullname="Jacob Rossi">
      <organization>Microsoft</organization>
    </author>
    <date year="2015" month="May" day="05"/>
  </front>
</reference>
<reference anchor="FacebookYearClass" target="https://code.fb.com/android/year-class-a-classification-system-for-android/">
  <front>
    <title>Year class: A classification system for Android</title>
    <author initials="C." surname="Marra" fullname="Chris Marra">
      <organization>Facebook</organization>
    </author>
    <author initials="D." surname="Weaver" fullname="Daniel Weaver">
      <organization>Facebook</organization>
    </author>
    <date year="2014" month="November" day="06"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

